{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "KafkaConnector",
  "properties": {
    "spec": {
      "description": "The specification of the Kafka Connector.",
      "type": "object",
      "properties": {
        "autoRestart": {
          "description": "Automatic restart of connector and tasks configuration.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Whether automatic restart for failed connectors and tasks should be enabled or disabled.",
              "type": "boolean"
            }
          }
        },
        "class": {
          "description": "The Class for the Kafka Connector.",
          "type": "string"
        },
        "config": {
          "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "pause": {
          "description": "Whether the connector should be paused. Defaults to false.",
          "type": "boolean"
        },
        "tasksMax": {
          "description": "The maximum number of tasks for the Kafka Connector.",
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "status": {
      "description": "The status of the Kafka Connector.",
      "type": "object",
      "properties": {
        "autoRestart": {
          "description": "The auto restart status.",
          "type": "object",
          "properties": {
            "connectorName": {
              "description": "The name of the connector being restarted.",
              "type": "string"
            },
            "count": {
              "description": "The number of times the connector or task is restarted.",
              "type": "integer"
            },
            "lastRestartTimestamp": {
              "description": "The last time the automatic restart was attempted. The required format is 'yyyy-MM-ddTHH:mm:ssZ' in the UTC time zone.",
              "type": "string"
            }
          }
        },
        "conditions": {
          "description": "List of status conditions.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about the condition's last transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition (a single word in CamelCase).",
                "type": "string"
              },
              "status": {
                "description": "The status of the condition, either True, False or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                "type": "string"
              }
            }
          }
        },
        "connectorStatus": {
          "description": "The connector status, as reported by the Kafka Connect REST API.",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "observedGeneration": {
          "description": "The generation of the CRD that was last reconciled by the operator.",
          "type": "integer"
        },
        "tasksMax": {
          "description": "The maximum number of tasks for the Kafka Connector.",
          "type": "integer"
        },
        "topics": {
          "description": "The list of topics used by the Kafka Connector.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}